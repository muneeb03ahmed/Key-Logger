from __future__ import annotations
import json
from dataclasses import asdict
from pathlib import Path
from typing import Dict
from jinja2 import Template
from .analytics import Metrics
import datetime

REPORTS_DIR = Path("./reports")
REPORTS_DIR.mkdir(parents=True, exist_ok=True)

_HTML = """
<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>KDyn Report — {{ m.session_id }}</title>
<style>
  :root { --bg:#0b0b0d; --fg:#e6e6e6; --card:#16161a; --muted:#a0a0aa; --green:#2ecc71; --blue:#3498db; --red:#e74c3c; }
  body { margin:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial; background: var(--bg); color: var(--fg); }
  .container { max-width: 1000px; margin: 24px auto; padding: 0 16px; }
  .header { display:flex; justify-content: space-between; align-items: baseline; }
  .kpis { display:grid; gap:12px; grid-template-columns: repeat(auto-fit, minmax(160px,1fr)); margin-top: 16px; }
  .card { background: var(--card); border-radius: 12px; padding: 16px; box-shadow: 0 2px 12px rgba(0,0,0,0.25); }
  h1 { font-size: 22px; margin:0; }
  h2 { font-size: 18px; margin: 16px 0 8px; }
  table { width:100%; border-collapse: collapse; }
  th, td { text-align:left; padding: 8px 6px; border-bottom: 1px solid #2a2a2f; font-size: 14px; }
  th { color: var(--muted); font-weight: 600; }
  .muted { color: var(--muted); }
  .pill { display:inline-block; padding:4px 10px; border-radius: 999px; background:#1f1f25; font-size:12px; }
</style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>KDyn Session <span class="pill">{{ m.session_id }}</span></h1>
      <div class="muted">Started {{ m.started_at }} • Duration {{ m.duration_secs }}s</div>
    </div>

    <div class="kpis">
      <div class="card"><div class="muted">Events</div><div style="font-size:28px;">{{ m.events }}</div></div>
      <div class="card"><div class="muted">Median Hold (ms)</div><div style="font-size:28px;">{{ '%.1f' % m.median_hold_ms }}</div></div>
      <div class="card"><div class="muted">Median Latency (ms)</div><div style="font-size:28px;">{{ '%.1f' % m.median_latency_ms }}</div></div>
      <div class="card"><div class="muted">p95 Latency (ms)</div><div style="font-size:28px;">{{ '%.1f' % m.p95_latency_ms }}</div></div>
      <div class="card"><div class="muted">Bursts</div><div style="font-size:28px;">{{ m.bursts }}</div></div>
      <div class="card"><div class="muted">Avg Burst Length</div><div style="font-size:28px;">{{ '%.1f' % m.avg_burst_len }}</div></div>
    </div>

    <div class="card" style="margin-top:16px;">
      <h2>Per-Key Stats</h2>
      <table>
        <thead><tr><th>VK Code</th><th>Count</th><th>Median Hold (ms)</th><th>p95 Hold (ms)</th></tr></thead>
        <tbody>
          {% for k in m.per_key %}
            <tr>
              <td>{{ k.code }}</td>
              <td>{{ k.count }}</td>
              <td>{{ '%.1f' % k.median_hold }}</td>
              <td>{{ '%.1f' % k.p95_hold }}</td>
            </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>

    <div class="muted" style="margin-top:12px;">Generated by KDyn on {{ now }}</div>
  </div>
</body>
</html>
"""


def write_json(metrics: Metrics) -> Path:
    REPORTS_DIR.mkdir(parents=True, exist_ok=True)
    path = REPORTS_DIR / f"{metrics.session_id}.json"
    data = {
        "session_id": metrics.session_id,
        "started_at": metrics.started_at,
        "duration_secs": metrics.duration_secs,
        "events": metrics.events,
        "holds_count": metrics.holds_count,
        "latency_count": metrics.latency_count,
        "median_hold_ms": metrics.median_hold_ms,
        "median_latency_ms": metrics.median_latency_ms,
        "p95_latency_ms": metrics.p95_latency_ms,
        "bursts": metrics.bursts,
        "avg_burst_len": metrics.avg_burst_len,
        "per_key": metrics.per_key,
    }
    path.write_text(json.dumps(data, indent=2), encoding="utf-8")
    return path


def write_html(metrics: Metrics) -> Path:
    REPORTS_DIR.mkdir(parents=True, exist_ok=True)
    path = REPORTS_DIR / f"{metrics.session_id}.html"
    html = Template(_HTML).render(m=metrics, now=datetime.datetime.utcnow().isoformat())
    path.write_text(html, encoding="utf-8")
    return path